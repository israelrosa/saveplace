{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport CustomButton from \"../../components/CustomButton\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useAppDispatch, useAppSelector } from \"../../hooks/storeHook\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { callNextClient, getCurrentQueue, getQueue, joinQueue, quitQueue } from \"../../store/actions/queueActions\";\nimport { useTheme } from 'styled-components';\nimport UilAngleLeft from '@iconscout/react-native-unicons/icons/uil-angle-left-b';\nimport UilSetting from '@iconscout/react-native-unicons/icons/uil-setting';\nimport { ActionsContainer, Card, CardAvatar, CardBox, CardHero, CardsContainer, CardSection, CardSpan, Container, ContentContainer, Header, HeaderAction, HeaderImage, HeaderText, HeaderTitleContent, SubHeader, SubHeaderText } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar QueueDetails = function QueueDetails() {\n  var _router$params3, _previousClient$user, _nextClient$user, _router$params4, _router$params5, _router$params6, _router$params7, _router$params8;\n\n  var theme = useTheme();\n  var router = useRoute();\n  var dispatch = useAppDispatch();\n  var navigation = useNavigation();\n\n  var _useAppSelector = useAppSelector(function (state) {\n    return state;\n  }),\n      queue = _useAppSelector.queue,\n      user = _useAppSelector.user;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      queueName = _useState2[0],\n      setQueueName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      queueOwner = _useState4[0],\n      setQueueOwner = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nextClient = _useState6[0],\n      setNextClient = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      previousClient = _useState8[0],\n      setPreviousClient = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      waitingTimeMinutes = _useState10[0],\n      setWaitingTimeMinutes = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      numberOfPeople = _useState12[0],\n      setNumberOfPeople = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      currentCode = _useState14[0],\n      setCurrentCode = _useState14[1];\n\n  var _useState15 = useState(0),\n      _useState16 = _slicedToArray(_useState15, 2),\n      queuePosition = _useState16[0],\n      setQueuePosition = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      queueId = _useState18[0],\n      setQueueId = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      queueClientId = _useState20[0],\n      setQueueClientId = _useState20[1];\n\n  useEffect(function () {\n    var _router$params;\n\n    var dispatchInterval;\n\n    if (router != null && (_router$params = router.params) != null && _router$params.id) {\n      dispatch(getQueue(router.params.id));\n\n      if (user.data.type === 'client') {\n        dispatchInterval = setInterval(function () {\n          dispatch(getQueue(router.params.id));\n        }, 60 * 1000);\n      }\n    } else if (user.data.type === 'client') {\n      dispatchInterval = setInterval(function () {\n        dispatch(getCurrentQueue());\n      }, 60 * 1000);\n    }\n\n    return function () {\n      clearInterval(dispatchInterval);\n    };\n  }, [router.params]);\n  useEffect(function () {\n    if (queue.queueDetail) {\n      var _queue$queueDetail, _queue$queueDetail$us, _queue$currentQueue;\n\n      console.log(queue.queueDetail);\n      setWaitingTimeMinutes(queue.queueDetail.waitingTimeMinutes);\n      setNextClient(queue.queueDetail.nextClient);\n      setPreviousClient(queue.queueDetail.previousClient);\n      setQueueId(queue.queueDetail.id);\n      setQueueName(queue.queueDetail.name);\n      setQueueOwner((_queue$queueDetail = queue.queueDetail) == null ? void 0 : (_queue$queueDetail$us = _queue$queueDetail.user) == null ? void 0 : _queue$queueDetail$us.name);\n\n      if (queue.queueDetail.id !== ((_queue$currentQueue = queue.currentQueue) == null ? void 0 : _queue$currentQueue.queueId)) {\n        setCurrentCode(queue.queueDetail.currentCode);\n        setNumberOfPeople(queue.queueDetail.numberOfPeople);\n        setQueuePosition(queue.queueDetail.numberOfPeople);\n      }\n    }\n  }, [queue, queue.queueDetail, queue.currentQueue]);\n  useEffect(function () {\n    var _router$params2;\n\n    if (!(router != null && (_router$params2 = router.params) != null && _router$params2.id) && queue.currentQueue) {\n      console.log(queue.currentQueue);\n      setQueuePosition(queue.currentQueue.position);\n      setCurrentCode(queue.currentQueue.code);\n      setQueueId(queue.currentQueue.queueId);\n      setQueueClientId(queue.currentQueue.id);\n      dispatch(getQueue(queue.currentQueue.queueId));\n    }\n  }, [router.params, queue.currentQueue]);\n\n  var handleJoinQueue = function handleJoinQueue() {\n    dispatch(joinQueue(queueId)).then(function () {\n      navigation.navigate('QueueDetails');\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var handleQuitQueue = function handleQuitQueue() {\n    dispatch(quitQueue(queueClientId)).then(function () {\n      navigation.navigate('SearchQueueDetails', {\n        id: queueId\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return _jsxs(Container, {\n    children: [_jsx(StatusBar, {\n      backgroundColor: theme.colors.primary,\n      style: \"light\"\n    }), _jsxs(Header, {\n      children: [_jsx(HeaderAction, {\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: _jsx(UilAngleLeft, {\n          color: theme.colors.text.reverse,\n          size: 24\n        })\n      }), _jsxs(HeaderTitleContent, {\n        children: [_jsx(HeaderImage, {\n          source: {\n            uri: 'http://www.stevnserhvervsraad.dk/wp-content/uploads/blank-avatar.png'\n          }\n        }), _jsx(HeaderText, {\n          children: queueOwner\n        })]\n      }), _jsx(HeaderAction, {\n        onPress: function onPress() {\n          return navigation.navigate('QueueForm', {\n            isEditMode: true\n          });\n        },\n        children: _jsx(UilSetting, {\n          color: theme.colors.text.reverse,\n          size: 24\n        })\n      })]\n    }), _jsx(SubHeader, {\n      children: _jsx(SubHeaderText, {\n        children: queueName\n      })\n    }), _jsxs(ContentContainer, {\n      children: [_jsxs(CardsContainer, {\n        children: [_jsx(View, {\n          style: {\n            flexDirection: 'row',\n            marginTop: 24\n          },\n          children: !(router != null && (_router$params3 = router.params) != null && _router$params3.id && user.data.type === 'client') && _jsxs(_Fragment, {\n            children: [_jsxs(Card, {\n              children: [_jsxs(CardBox, {\n                style: {\n                  backgroundColor: theme.colors.background.grey\n                },\n                children: [_jsx(CardSpan, {\n                  children: user.data.type === 'client' ? 'Atual' : 'Anterior'\n                }), _jsxs(CardSection, {\n                  children: [\"Senha:\", (previousClient == null ? void 0 : previousClient.code) || 0]\n                })]\n              }), _jsxs(CardBox, {\n                style: {\n                  flexDirection: 'row',\n                  alignItems: 'center'\n                },\n                children: [_jsx(CardAvatar, {\n                  source: {\n                    uri: 'http://www.stevnserhvervsraad.dk/wp-content/uploads/blank-avatar.png'\n                  }\n                }), _jsx(CardSection, {\n                  style: {\n                    marginLeft: 12\n                  },\n                  children: previousClient == null ? void 0 : (_previousClient$user = previousClient.user) == null ? void 0 : _previousClient$user.name\n                })]\n              })]\n            }), _jsx(View, {\n              style: {\n                width: 12\n              }\n            }), _jsxs(Card, {\n              children: [_jsxs(CardBox, {\n                style: {\n                  backgroundColor: theme.colors.background.grey\n                },\n                children: [_jsx(CardSpan, {\n                  children: \"Pr\\xF3ximo(a) da fila\"\n                }), _jsxs(CardSection, {\n                  children: [\"Senha:\", ' ', (nextClient == null ? void 0 : nextClient.code) || 0]\n                })]\n              }), _jsxs(CardBox, {\n                style: {\n                  flexDirection: 'row',\n                  alignItems: 'center'\n                },\n                children: [_jsx(CardAvatar, {\n                  source: {\n                    uri: 'http://www.stevnserhvervsraad.dk/wp-content/uploads/blank-avatar.png'\n                  }\n                }), _jsx(CardSection, {\n                  style: {\n                    marginLeft: 12\n                  },\n                  children: (nextClient == null ? void 0 : (_nextClient$user = nextClient.user) == null ? void 0 : _nextClient$user.name) || ''\n                })]\n              })]\n            })]\n          })\n        }), _jsxs(Card, {\n          children: [_jsx(CardBox, {\n            style: {\n              backgroundColor: theme.colors.background.grey\n            },\n            children: _jsx(CardSection, {\n              children: !(router != null && (_router$params4 = router.params) != null && _router$params4.id) && user.data.type === 'client' ? 'Sua senha' : 'Senha atual'\n            })\n          }), _jsx(CardBox, {\n            children: _jsx(CardHero, {\n              children: currentCode\n            })\n          })]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: 'row'\n          },\n          children: [_jsxs(Card, {\n            children: [_jsx(CardBox, {\n              children: _jsx(CardHero, {\n                children: user.data.type === 'client' ? queuePosition : numberOfPeople\n              })\n            }), _jsxs(CardBox, {\n              style: {\n                backgroundColor: theme.colors.background.grey\n              },\n              children: [_jsx(CardSection, {\n                children: !(router != null && (_router$params5 = router.params) != null && _router$params5.id) && user.data.type ? 'Posição' : 'Pessoas'\n              }), _jsx(CardSpan, {\n                children: \"Na fila\"\n              })]\n            })]\n          }), _jsx(View, {\n            style: {\n              width: 12\n            }\n          }), _jsxs(Card, {\n            children: [_jsx(CardBox, {\n              children: _jsx(CardHero, {\n                children: waitingTimeMinutes || 0\n              })\n            }), _jsxs(CardBox, {\n              style: {\n                backgroundColor: theme.colors.background.grey\n              },\n              children: [_jsx(CardSection, {\n                children: \"Minutos\"\n              }), _jsx(CardSpan, {\n                children: \"De espera\"\n              })]\n            })]\n          })]\n        })]\n      }), _jsxs(ActionsContainer, {\n        children: [(router == null ? void 0 : (_router$params6 = router.params) == null ? void 0 : _router$params6.id) && user.data.type === 'client' && _jsx(CustomButton, {\n          color: theme.colors.primary,\n          text: \"Entrar na fila\",\n          onPress: handleJoinQueue\n        }), (router == null ? void 0 : (_router$params7 = router.params) == null ? void 0 : _router$params7.id) && user.data.type === 'establishment' && _jsx(CustomButton, {\n          color: theme.colors.primary,\n          text: \"Chamar pr\\xF3ximo\",\n          onPress: function onPress() {\n            return dispatch(callNextClient(router.params.id));\n          }\n        }), !(router != null && (_router$params8 = router.params) != null && _router$params8.id) && _jsx(CustomButton, {\n          color: theme.colors.primary,\n          text: \"Sair da fila\",\n          onPress: handleQuitQueue\n        })]\n      })]\n    })]\n  });\n};\n\nexport default QueueDetails;","map":{"version":3,"sources":["/home/israel/Projects/saveplace/app/src/screens/QueueDetails/index.tsx"],"names":["useNavigation","useRoute","CustomButton","StatusBar","useAppDispatch","useAppSelector","React","useEffect","useState","callNextClient","getCurrentQueue","getQueue","joinQueue","quitQueue","useTheme","UilAngleLeft","UilSetting","ActionsContainer","Card","CardAvatar","CardBox","CardHero","CardsContainer","CardSection","CardSpan","Container","ContentContainer","Header","HeaderAction","HeaderImage","HeaderText","HeaderTitleContent","SubHeader","SubHeaderText","QueueDetails","theme","router","dispatch","navigation","state","queue","user","queueName","setQueueName","queueOwner","setQueueOwner","nextClient","setNextClient","previousClient","setPreviousClient","waitingTimeMinutes","setWaitingTimeMinutes","numberOfPeople","setNumberOfPeople","currentCode","setCurrentCode","queuePosition","setQueuePosition","queueId","setQueueId","queueClientId","setQueueClientId","dispatchInterval","params","id","data","type","setInterval","clearInterval","queueDetail","console","log","name","currentQueue","position","code","handleJoinQueue","then","navigate","catch","error","handleQuitQueue","colors","primary","goBack","text","reverse","uri","isEditMode","flexDirection","marginTop","backgroundColor","background","grey","alignItems","marginLeft","width"],"mappings":"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","sourcesContent":["import { useNavigation, useRoute } from '@react-navigation/native';\nimport CustomButton from 'components/CustomButton';\nimport { StatusBar } from 'expo-status-bar';\nimport { useAppDispatch, useAppSelector } from 'hooks/storeHook';\nimport React, { useEffect, useState } from 'react';\nimport { View } from 'react-native';\nimport { callNextClient, getCurrentQueue, getQueue, joinQueue, quitQueue } from 'store/actions/queueActions';\nimport { useTheme } from 'styled-components';\nimport UilAngleLeft from '@iconscout/react-native-unicons/icons/uil-angle-left-b';\nimport UilSetting from '@iconscout/react-native-unicons/icons/uil-setting';\n\nimport {\n  ActionsContainer,\n  Card,\n  CardAvatar,\n  CardBox,\n  CardHero,\n  CardsContainer,\n  CardSection,\n  CardSpan,\n  Container,\n  ContentContainer,\n  Header,\n  HeaderAction,\n  HeaderImage,\n  HeaderText,\n  HeaderTitleContent,\n  SubHeader,\n  SubHeaderText,\n} from './styles';\n\nconst QueueDetails: React.FC = () => {\n  const theme = useTheme();\n  const router = useRoute();\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const { queue, user } = useAppSelector(state => state);\n  const [queueName, setQueueName] = useState('');\n  const [queueOwner, setQueueOwner] = useState('');\n  // const [currentClient, setCurrentClient] = useState({});\n  const [nextClient, setNextClient] = useState({});\n  const [previousClient, setPreviousClient] = useState({});\n  const [waitingTimeMinutes, setWaitingTimeMinutes] = useState(0);\n  const [numberOfPeople, setNumberOfPeople] = useState(0);\n  const [currentCode, setCurrentCode] = useState(0);\n  const [queuePosition, setQueuePosition] = useState(0);\n  const [queueId, setQueueId] = useState('');\n  const [queueClientId, setQueueClientId] = useState('');\n\n  useEffect(() => {\n    // eslint-disable-next-line no-undef\n    let dispatchInterval: NodeJS.Timer;\n    if (router?.params?.id) {\n      dispatch(getQueue(router.params.id));\n      if (user.data.type === 'client') {\n        dispatchInterval = setInterval(() => {\n          dispatch(getQueue(router.params.id));\n        }, 60 * 1000);\n      }\n    } else if (user.data.type === 'client') {\n      dispatchInterval = setInterval(() => {\n        dispatch(getCurrentQueue());\n      }, 60 * 1000);\n    }\n\n    return () => {\n      clearInterval(dispatchInterval);\n    };\n  }, [router.params]);\n\n  useEffect(() => {\n    if (queue.queueDetail) {\n      console.log(queue.queueDetail);\n      setWaitingTimeMinutes(queue.queueDetail.waitingTimeMinutes);\n      setNextClient(queue.queueDetail.nextClient);\n      setPreviousClient(queue.queueDetail.previousClient);\n      setQueueId(queue.queueDetail.id);\n      setQueueName(queue.queueDetail.name);\n      setQueueOwner(queue.queueDetail?.user?.name);\n      if (queue.queueDetail.id !== queue.currentQueue?.queueId) {\n        setCurrentCode(queue.queueDetail.currentCode);\n        setNumberOfPeople(queue.queueDetail.numberOfPeople);\n        setQueuePosition(queue.queueDetail.numberOfPeople);\n      }\n    }\n  }, [queue, queue.queueDetail, queue.currentQueue]);\n\n  useEffect(() => {\n    if (!router?.params?.id && queue.currentQueue) {\n      console.log(queue.currentQueue);\n      setQueuePosition(queue.currentQueue.position);\n      setCurrentCode(queue.currentQueue.code);\n      setQueueId(queue.currentQueue.queueId);\n      setQueueClientId(queue.currentQueue.id);\n      dispatch(getQueue(queue.currentQueue.queueId));\n    }\n  }, [router.params, queue.currentQueue]);\n\n  const handleJoinQueue = () => {\n    dispatch(joinQueue(queueId)).then(() => {\n      navigation.navigate('QueueDetails');\n    }).catch((error) => {\n      console.log(error);\n    });\n  };\n\n  const handleQuitQueue = () => {\n    dispatch(quitQueue(queueClientId)).then(() => {\n      navigation.navigate('SearchQueueDetails', { id: queueId });\n    }).catch((error) => {\n      console.log(error);\n    });\n  };\n\n  return (\n    <Container>\n      <StatusBar backgroundColor={theme.colors.primary} style=\"light\" />\n      <Header>\n        <HeaderAction onPress={() => navigation.goBack()}>\n          <UilAngleLeft color={theme.colors.text.reverse} size={24} />\n        </HeaderAction>\n        <HeaderTitleContent>\n          <HeaderImage\n            source={{\n              uri: 'http://www.stevnserhvervsraad.dk/wp-content/uploads/blank-avatar.png',\n            }}\n          />\n          <HeaderText>{queueOwner}</HeaderText>\n        </HeaderTitleContent>\n        <HeaderAction onPress={() => navigation.navigate('QueueForm', { isEditMode: true })}>\n          <UilSetting color={theme.colors.text.reverse} size={24} />\n        </HeaderAction>\n      </Header>\n      <SubHeader>\n        <SubHeaderText>{queueName}</SubHeaderText>\n      </SubHeader>\n      <ContentContainer>\n        <CardsContainer>\n          <View style={{ flexDirection: 'row', marginTop: 24 }}>\n            {!(router?.params?.id && user.data.type === 'client') && (\n            <>\n              <Card>\n                <CardBox style={{ backgroundColor: theme.colors.background.grey }}>\n                  <CardSpan>{user.data.type === 'client' ? 'Atual' : 'Anterior'}</CardSpan>\n                  <CardSection>\n                    Senha:\n                    {previousClient?.code || 0 }\n                  </CardSection>\n                </CardBox>\n                <CardBox style={{ flexDirection: 'row', alignItems: 'center' }}>\n                  <CardAvatar\n                    source={{\n                      uri: 'http://www.stevnserhvervsraad.dk/wp-content/uploads/blank-avatar.png',\n                    }}\n                  />\n                  <CardSection style={{ marginLeft: 12 }}>{previousClient?.user?.name}</CardSection>\n                </CardBox>\n              </Card>\n              <View style={{ width: 12 }} />\n              <Card>\n                <CardBox style={{ backgroundColor: theme.colors.background.grey }}>\n                  <CardSpan>Próximo(a) da fila</CardSpan>\n                  <CardSection>\n                    Senha:\n                    {' '}\n                    {nextClient?.code || 0}\n                  </CardSection>\n                </CardBox>\n                <CardBox style={{ flexDirection: 'row', alignItems: 'center' }}>\n                  <CardAvatar\n                    source={{\n                      uri: 'http://www.stevnserhvervsraad.dk/wp-content/uploads/blank-avatar.png',\n                    }}\n                  />\n                  <CardSection style={{ marginLeft: 12 }}>{nextClient?.user?.name || ''}</CardSection>\n                </CardBox>\n              </Card>\n            </>\n            )}\n          </View>\n          <Card>\n            <CardBox style={{ backgroundColor: theme.colors.background.grey }}>\n              <CardSection>{!router?.params?.id && user.data.type === 'client' ? 'Sua senha' : 'Senha atual'}</CardSection>\n            </CardBox>\n            <CardBox>\n              <CardHero>{currentCode}</CardHero>\n            </CardBox>\n          </Card>\n          <View style={{ flexDirection: 'row' }}>\n            <Card>\n              <CardBox>\n                <CardHero>{user.data.type === 'client' ? queuePosition : numberOfPeople}</CardHero>\n              </CardBox>\n              <CardBox style={{ backgroundColor: theme.colors.background.grey }}>\n                <CardSection>{!router?.params?.id && user.data.type ? 'Posição' : 'Pessoas'}</CardSection>\n                <CardSpan>Na fila</CardSpan>\n              </CardBox>\n            </Card>\n            <View style={{ width: 12 }} />\n            <Card>\n              <CardBox>\n                <CardHero>{waitingTimeMinutes || 0}</CardHero>\n              </CardBox>\n              <CardBox style={{ backgroundColor: theme.colors.background.grey }}>\n                <CardSection>Minutos</CardSection>\n                <CardSpan>De espera</CardSpan>\n              </CardBox>\n            </Card>\n          </View>\n        </CardsContainer>\n        <ActionsContainer>\n          {router?.params?.id && user.data.type === 'client' && (\n            <CustomButton color={theme.colors.primary} text=\"Entrar na fila\" onPress={handleJoinQueue} />\n          )}\n          { router?.params?.id && user.data.type === 'establishment' && (\n            <CustomButton color={theme.colors.primary} text=\"Chamar próximo\" onPress={() => dispatch(callNextClient(router.params.id))} />\n          )}\n          {!router?.params?.id && (\n            <CustomButton color={theme.colors.primary} text=\"Sair da fila\" onPress={handleQuitQueue} />\n          )}\n        </ActionsContainer>\n      </ContentContainer>\n    </Container>\n  );\n};\n\nexport default QueueDetails;\n"]},"metadata":{},"sourceType":"module"}